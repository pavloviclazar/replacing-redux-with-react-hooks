{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\nexport const useStore = function () {\n  _s();\n  let shouldListen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const setState = useState(globalState)[1];\n  const dispatch = (actionIdentifier, payload) => {\n    const newState = actions[actionIdentifier](globalState, payload);\n    globalState = {\n      ...globalState,\n      ...newState\n    };\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n  useEffect(() => {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n    return () => {\n      if (shouldListen) {\n        listeners = listeners.filter(li => li !== setState);\n      }\n    };\n  }, [setState, shouldListen]);\n  return [globalState, dispatch];\n};\n_s(useStore, \"nM5W+84F396yCKDu4U2VhqiPF0o=\");\nexport const initStore = (userActions, initState) => {\n  if (initState) {\n    globalState = {\n      ...globalState,\n      ...initState\n    };\n  }\n  actions = {\n    ...actions,\n    ...userActions\n  };\n};","map":{"version":3,"names":["useState","useEffect","globalState","listeners","actions","useStore","shouldListen","setState","dispatch","actionIdentifier","payload","newState","listener","push","filter","li","initStore","userActions","initState"],"sources":["/Users/mac/Downloads/replace-redux-01-starting-project/src/hooks-store/store.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\n\nexport const useStore = (shouldListen = true) => {\n  const setState = useState(globalState)[1];\n\n  const dispatch = (actionIdentifier, payload) => {\n    const newState = actions[actionIdentifier](globalState, payload);\n    globalState = { ...globalState, ...newState };\n\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n\n  useEffect(() => {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n\n    return () => {\n      if (shouldListen) {\n        listeners = listeners.filter((li) => li !== setState);\n      }\n    };\n  }, [setState, shouldListen]);\n\n  return [globalState, dispatch];\n};\n\nexport const initStore = (userActions, initState) => {\n  if (initState) {\n    globalState = { ...globalState, ...initState };\n  }\n\n  actions = { ...actions, ...userActions };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,IAAIC,WAAW,GAAG,CAAC,CAAC;AACpB,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,OAAO,GAAG,CAAC,CAAC;AAEhB,OAAO,MAAMC,QAAQ,GAAG,YAAyB;EAAA;EAAA,IAAxBC,YAAY,uEAAG,IAAI;EAC1C,MAAMC,QAAQ,GAAGP,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;EAEzC,MAAMM,QAAQ,GAAG,CAACC,gBAAgB,EAAEC,OAAO,KAAK;IAC9C,MAAMC,QAAQ,GAAGP,OAAO,CAACK,gBAAgB,CAAC,CAACP,WAAW,EAAEQ,OAAO,CAAC;IAChER,WAAW,GAAG;MAAE,GAAGA,WAAW;MAAE,GAAGS;IAAS,CAAC;IAE7C,KAAK,MAAMC,QAAQ,IAAIT,SAAS,EAAE;MAChCS,QAAQ,CAACV,WAAW,CAAC;IACvB;EACF,CAAC;EAEDD,SAAS,CAAC,MAAM;IACd,IAAIK,YAAY,EAAE;MAChBH,SAAS,CAACU,IAAI,CAACN,QAAQ,CAAC;IAC1B;IAEA,OAAO,MAAM;MACX,IAAID,YAAY,EAAE;QAChBH,SAAS,GAAGA,SAAS,CAACW,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKR,QAAQ,CAAC;MACvD;IACF,CAAC;EACH,CAAC,EAAE,CAACA,QAAQ,EAAED,YAAY,CAAC,CAAC;EAE5B,OAAO,CAACJ,WAAW,EAAEM,QAAQ,CAAC;AAChC,CAAC;AAAC,GAzBWH,QAAQ;AA2BrB,OAAO,MAAMW,SAAS,GAAG,CAACC,WAAW,EAAEC,SAAS,KAAK;EACnD,IAAIA,SAAS,EAAE;IACbhB,WAAW,GAAG;MAAE,GAAGA,WAAW;MAAE,GAAGgB;IAAU,CAAC;EAChD;EAEAd,OAAO,GAAG;IAAE,GAAGA,OAAO;IAAE,GAAGa;EAAY,CAAC;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}